TEMPLATE_DIR = '/Developer/Platforms/iPhoneOS.platform/Developer/Library/Xcode/Project Templates/Application/ShinyCocos Application'
APP_NAME     = "___PROJECTNAMEASIDENTIFIER___"
PROJECT      = "___PROJECTNAMEASIDENTIFIER___.xcodeproj"
TARGET       = APP_NAME
SDK_DEVICE   = "iphoneos3.1.2"
SDK_SIMUL    = "iphonesimulator3.1.2"
XCODEBUILD   = "/usr/bin/xcodebuild"

def xcodebuild_str(config = "Debug", sdk = SDK_SIMUL)
  "#{XCODEBUILD} -project #{PROJECT} -target #{TARGET} -sdk #{sdk} -configuration #{config}" 
end

desc "check ShinyCocos library version and update if a newer one is installed"
task :update_shinycocos do
  current = Dir["#{TEMPLATE_DIR}/ShinyCocos/lib/libShinyCocos-*.a"].first
  # just to make sure :-)
  if File.exists?(current) && md = current.match(/libShinyCocos-(\w+).a/)
    svers = md[1]
    puts "Template lib: #{svers}"
    installed = Dir["#{ENV['PWD']}/ShinyCocos/lib/libShinyCocos-*.a"].first
    if installed
      ivers = installed.match(/libShinyCocos-(\w+).a/)[1]
      if ivers != svers
        puts "Updating ShinyCocos (current: #{ivers})"
        sh "rm -f ./ShinyCocos/lib/*.a"
        # copy original files
        sh "cp '#{TEMPLATE_DIR}/ShinyCocos/lib/libShinyCocos-#{svers}.a' '#{ENV['PWD']}/ShinyCocos/lib'"
        sh "cp '#{TEMPLATE_DIR}/ShinyCocos/lib/libShinyCocosd-#{svers}.a' '#{ENV['PWD']}/ShinyCocos/lib'"
        # create links
        sh "ln -s '#{ENV['PWD']}/ShinyCocos/lib/libShinyCocos-#{svers}.a' '#{ENV['PWD']}/ShinyCocos/lib/libShinyCocos.a'"
        sh "ln -s '#{ENV['PWD']}/ShinyCocos/lib/libShinyCocosd-#{svers}.a' '#{ENV['PWD']}/ShinyCocos/lib/libShinyCocosd.a'"
      end
    end
  end
end

desc "builds the debug version of the app (for simulator)"
task :build_debug do
  sh "#{xcodebuild_str('Debug', SDK_SIMUL)} build"
end

desc "removes the app from the simulator"
task :clean_simulator do
  dst_dir = "#{ENV['HOME']}/Library/Application Support/iPhone Simulator/User/Applications/#{APP_NAME}"
  rm_rf dst_dir
end

desc "installs the app on the simulator"
task :install_on_sim do
  dst_dir = "#{ENV['HOME']}/Library/Application Support/iPhone Simulator/User/Applications/#{APP_NAME}"

  mkdir_p dst_dir
  mkdir_p "#{dst_dir}/Documents"
  mkdir_p "#{dst_dir}/Library/Caches"
  mkdir_p "#{dst_dir}/Library/Preferences"
  mkdir_p "#{dst_dir}/tmp"
  # replate old binary
  rm_rf "#{dst_dir}/#{APP_NAME}.app"
  cp_r "build/Debug-iphonesimulator/#{APP_NAME}.app", dst_dir
end

desc "build application, then install and run on simulator"
task :debug => [:build_debug, :install_on_sim] do
  dst_dir = "#{ENV['HOME']}/Library/Application Support/iPhone Simulator/User/Applications/#{APP_NAME}"
  sh "./iphonesim launch '#{dst_dir}/#{APP_NAME}.app' 3.0"
end

=begin
TODO

* build for device (must sign the app) - check what the guys from http://www.appcelerator.com did
* install on device (through iTunes)
* build for AppStore
=end
